<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="ALL" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="c925da83-4b4a-4fb5-9837-4c51ccce3e2b" name="Changes" comment="">
      <change afterPath="$PROJECT_DIR$/api/handler/handler.login.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/api/router/router.v1.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/bot/event-handler/bot.event.handler.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/bot/event-handler/bot.handler.auth.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/main.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/pkg/HashMD5.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/pkg/HashPassword.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/pkg/RandomCharString.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/pkg/sizeconv.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/service/AuthService/AuthService.login.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/storage/postgres.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/storage/schema.sql" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/storage/storage.auth.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/types/is.handler.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/types/type-api/BaseResponse.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/types/type-api/types.api.login.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/types/type-event/event.bot.login.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/types/type-redis/type.redis.auth.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/api/api.go" beforeDir="false" afterPath="$PROJECT_DIR$/api/api.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/api/dto.go" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/api/handlers.go" beforeDir="false" afterPath="$PROJECT_DIR$/api/handler/handlers.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/api/router.go" beforeDir="false" afterPath="$PROJECT_DIR$/api/router/router.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/api/types.go" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/bot/bot.go" beforeDir="false" afterPath="$PROJECT_DIR$/bot/bot.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cache/interface.go" beforeDir="false" afterPath="$PROJECT_DIR$/cache/interface.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cache/redis.go" beforeDir="false" afterPath="$PROJECT_DIR$/cache/redis.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cache/typed_cache.go" beforeDir="false" afterPath="$PROJECT_DIR$/cache/typed_cache.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmd/example/main.go" beforeDir="false" afterPath="$PROJECT_DIR$/cmd/example/main.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/config/config.go" beforeDir="false" afterPath="$PROJECT_DIR$/config/config.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/docker-compose.yaml" beforeDir="false" afterPath="$PROJECT_DIR$/docker-compose.yaml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/dto/response.go" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/go.mod" beforeDir="false" afterPath="$PROJECT_DIR$/go.mod" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/middleware/session_auth.go" beforeDir="false" afterPath="$PROJECT_DIR$/api/middleware/session_auth.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/models/models.go" beforeDir="false" afterPath="$PROJECT_DIR$/models/models.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/pkg/crypto.go" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/service/service.go" beforeDir="false" afterPath="$PROJECT_DIR$/service/service.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/service/user_service.go" beforeDir="false" afterPath="$PROJECT_DIR$/service/user_service.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/storage/store.go" beforeDir="false" afterPath="$PROJECT_DIR$/storage/store.go" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Go File" />
      </list>
    </option>
  </component>
  <component name="GOROOT" url="file:///snap/go/10907" />
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="KubernetesApiPersistence">{}</component>
  <component name="KubernetesApiProvider">{
  &quot;isMigrated&quot;: true
}</component>
  <component name="ProjectColorInfo">{
  &quot;associatedIndex&quot;: 8
}</component>
  <component name="ProjectId" id="30k5uUqrMUcSTiF9P5zJvD6iRCc" />
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent">{
  &quot;keyToString&quot;: {
    &quot;DefaultGoTemplateProperty&quot;: &quot;Go File&quot;,
    &quot;Docker.docker-compose.yaml: Compose Deployment.executor&quot;: &quot;Run&quot;,
    &quot;Go Build.go build BackendPanelVpn/cmd/example.executor&quot;: &quot;Run&quot;,
    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.go.formatter.settings.were.checked&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.go.migrated.go.modules.settings&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.go.modules.automatic.dependencies.download&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.go.modules.go.list.on.any.changes.was.set&quot;: &quot;true&quot;,
    &quot;git-widget-placeholder&quot;: &quot;main&quot;,
    &quot;go.import.settings.migrated&quot;: &quot;true&quot;,
    &quot;go.sdk.automatically.set&quot;: &quot;true&quot;,
    &quot;last_opened_file_path&quot;: &quot;/home/javad/Desktop/my projct/NilTeam/BackendPanelVpn/pkg&quot;,
    &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,
    &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;,
    &quot;nodejs_package_manager_path&quot;: &quot;npm&quot;,
    &quot;settings.editor.selected.configurable&quot;: &quot;com.github.copilot.settings.ApplicationConfigurable&quot;
  },
  &quot;keyToStringList&quot;: {
    &quot;DatabaseDriversLRU&quot;: [
      &quot;postgresql&quot;
    ]
  }
}</component>
  <component name="RecentsManager">
    <key name="CopyFile.RECENT_KEYS">
      <recent name="$PROJECT_DIR$/pkg" />
      <recent name="$PROJECT_DIR$/storage" />
    </key>
    <key name="MoveFile.RECENT_KEYS">
      <recent name="$PROJECT_DIR$/storage" />
      <recent name="$PROJECT_DIR$" />
      <recent name="$PROJECT_DIR$/api/router" />
      <recent name="$PROJECT_DIR$/api/handler" />
      <recent name="$PROJECT_DIR$/api" />
    </key>
  </component>
  <component name="RunManager" selected="Docker.docker-compose.yaml: Compose Deployment">
    <configuration name="go build BackendPanelVpn/cmd/example" type="GoApplicationRunConfiguration" factoryName="Go Application" temporary="true" nameIsGenerated="true">
      <module name="BackendPanelVpn" />
      <working_directory value="$PROJECT_DIR$" />
      <kind value="PACKAGE" />
      <package value="BackendPanelVpn/cmd/example" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$/cmd/example/main.go" />
      <method v="2" />
    </configuration>
    <configuration default="true" type="docker-deploy" factoryName="docker-compose.yml" temporary="true">
      <deployment type="docker-compose.yml">
        <settings />
      </deployment>
      <method v="2" />
    </configuration>
    <configuration name="docker-compose.yaml: Compose Deployment" type="docker-deploy" factoryName="docker-compose.yml" temporary="true" server-name="Docker">
      <deployment type="docker-compose.yml">
        <settings>
          <option name="sourceFilePath" value="docker-compose.yaml" />
        </settings>
      </deployment>
      <method v="2" />
    </configuration>
    <recent_temporary>
      <list>
        <item itemvalue="Go Build.go build BackendPanelVpn/cmd/example" />
        <item itemvalue="Docker.docker-compose.yaml: Compose Deployment" />
      </list>
    </recent_temporary>
  </component>
  <component name="SharedIndexes">
    <attachedChunks>
      <set>
        <option value="bundled-gosdk-33c477a475b1-e0158606a674-org.jetbrains.plugins.go.sharedIndexes.bundled-GO-241.17011.92" />
        <option value="bundled-js-predefined-1d06a55b98c1-0b3e54e931b4-JavaScript-GO-241.17011.92" />
      </set>
    </attachedChunks>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="VgoProject">
    <settings-migrated>true</settings-migrated>
  </component>
</project>